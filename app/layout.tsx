import type { Metadata } from "next";
import { Pixelify_Sans, Poppins, Hanken_Grotesk } from "next/font/google";
import "./globals.css";
import Image from "next/image";
import Link from "next/link";
import Footer from "@/components/footer";
import { BlogPost, Experience, Project } from "@/interfaces";
import StoreInitializer from "@/components/storeInitializer";

const poppinsFont = Poppins({
  variable: "--font-poppins",
  weight: ["100", "200", "300", "400", "500", "600", "700", "800"],
  subsets: ["latin"],
});

const pixelifyFont = Pixelify_Sans({
  variable: "--font-pixel",
  weight: ["400", "500", "600", "700"],
  subsets: ["latin"],
});

const hankenFont = Hanken_Grotesk({
  variable: "--font-hanken",
  weight: ["100","200",'300','400','500','600','700','800','900'],
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Amrit Utsav",
  description: "Generated by create next app",

  openGraph: {
    title: "Amrit Utsav - Full Stack Developer", // Title shown on the card
    description:
      "I engineer sleek web and app experiences using Typescript, ReactJS, NodeJS, Django, Socket.IO, etc. optimized for performance and crafted with a designerâ€™s precision.", // Description shown on the card
    url: "https://www.amritutsav.tech", // Your full domain
    siteName: "Amrit Utsav",
    images: [
      {
        // 3. This is the MOST IMPORTANT part
        // You MUST provide a full, absolute URL
        url: "https://res.cloudinary.com/dvreyhvcw/image/upload/v1761862151/og-image_iotuvd.png",
        width: 1200,
        height: 630,
        alt: "Amrit Utsav Portfolio Preview",
      },
    ],
    locale: "en_US",
    type: "website",
  },
};


async function fetchExperiences(): Promise<Experience[]> {
  "use cache";
  const res = await fetch(process.env.BASE_URL + "/experience");
  const experiences: Experience[] = await res.json();
  return experiences;
}

async function fetchProjects(): Promise<Project[]> {
  "use cache";
  const res = await fetch(process.env.BASE_URL + "/project");
  const projects: Project[] = await res.json();
  return projects;
}

async function fetchBlogs(): Promise<BlogPost[]> {
  "use cache";

  const GET_USER_ARTICLES = `
    query GetUserArticles($host: String!) {
      publication(host: $host) {
        posts(first: 20) {
          edges {
            node {
              title
              brief
              url
              slug
              publishedAt
              readTimeInMinutes
              coverImage {
                url
              }
            }
          }
        }
      }
    }
  `;
  const response = await fetch("https://gql.hashnode.com/", {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
    },
    body: JSON.stringify({
      query: GET_USER_ARTICLES,
      variables: {
        host: process.env.HASHNODE_HOST,
      },
    }),
    // Re-fetch blogs every 1 hour
    next: { revalidate: 3600 },
  });

  const data = await response.json();

  // Handle potential errors from the GraphQL API
  if (!data.data?.publication) {
    console.error("Error fetching blogs:", data.errors);
    return [];
  }

  return data.data.publication.posts.edges;
}


export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {

    const [experiences, projects, blogs] = await Promise.all([
      fetchExperiences(),
      fetchProjects(),
      fetchBlogs(),
    ]);

  return (
    <html lang="en">
      <body
        className={` ${poppinsFont.variable} ${pixelifyFont.variable} ${hankenFont.variable} antialiased text-zinc-700`}
      >
        <>
          <div className="container mx-auto max-w-4xl px-4 py-3">
            <StoreInitializer 
              experiences={experiences}
              projects={projects}
              blogs={blogs}
            />
            <div className="flex gap-4 align-middle items-center py-5 backdrop-blur-sm rounded-b-xxl sticky top-0">
              <div className="flex gap-3 align-middle">
                <Link href={"/"}>
                  <Image
                    src={"/amritlogo.png"}
                    alt="logo"
                    width={"50"}
                    height={"50"}
                    className="bg-blue-300 rounded-2xl"
                  />
                </Link>
                {/* <p className="mt-2 font-bold text-2xl">&lt;Au/&gt;</p> */}
              </div>
              <div className="flex align-middle gap-5 text-center font-pixel">
                <Link
                  href="/experience"
                  className="text-zinc-400 hover:text-zinc-700 hover:underline decoration-dotted underline-offset-3"
                >
                  Experience
                </Link>
                <Link
                  href="/projects"
                  className="text-zinc-400 hover:text-zinc-700 hover:underline decoration-dotted underline-offset-3"
                >
                  Projects
                </Link>
                <Link
                  href="/blogs"
                  className="text-zinc-400 hover:text-zinc-700 hover:underline decoration-dotted underline-offset-3"
                >
                  Blogs
                </Link>
              </div>
            </div>
            <div style={{ height: "8vh" }} />
            <div className="px-3 md:px-10">{children}</div>
            <Footer />
          </div>
        </>
      </body>
    </html>
  );
}
